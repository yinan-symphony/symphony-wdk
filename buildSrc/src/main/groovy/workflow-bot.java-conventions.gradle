plugins {
    id 'java'
    id 'io.freefair.lombok'
    id 'jacoco'

    // code quality
    id 'checkstyle'
    id 'com.github.spotbugs'

    // deployment
    id 'maven-publish'
    id 'signing'
}

repositories {
    mavenCentral()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }

    withJavadocJar()
    withSourcesJar()
}

javadoc.options.addStringOption('Xdoclint:none', '-quiet')

test {
    useJUnitPlatform()
    testLogging {
        exceptionFormat = 'full'
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.9
            }
            element = 'BUNDLE'
        }
    }
}

test.finalizedBy jacocoTestReport
check.dependsOn jacocoTestCoverageVerification
check.dependsOn javadoc

checkstyle {
    configFile = rootProject.file("checkstyle.xml")
}

// Enable HTML report for spotbugs
tasks.matching { task -> task.name.startsWith('spotbugs') }.forEach {
    it.excludeFilter = rootProject.file("spotbugs.xml")
    it.reports {
        html.enabled = true
        xml.enabled = false
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
            pom(rootProject.ext.pomDefinition)
            pom.withXml {
                // otherwise project description is evaluated too early
                asNode().children().first().plus {
                    setResolveStrategy(Closure.DELEGATE_FIRST)
                    'name' project.name
                    'description' project.description
                }
            }
        }
    }

    repositories {
        maven {
            credentials {
                username rootProject.ext.mavenRepoUsername ?: 'Symphony artifactory user'
                password rootProject.ext.mavenRepoPassword ?: 'Symphony artifactory password'
            }
            url = rootProject.ext.mavenRepoUrl
        }
    }
}

signing {
    required { !rootProject.ext.projectVersion.endsWith('SNAPSHOT') }
    sign publishing.publications.maven
}
